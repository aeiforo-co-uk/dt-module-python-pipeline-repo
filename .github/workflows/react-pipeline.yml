name: React Reusable CI/CD Pipeline

on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      SONAR_TOKEN:
        required: true
      MY_GITHUB_TOKEN:
        required: true
    inputs:
      aws-region:
        description: 'AWS Region'
        required: true
        type: string
      sonar-project-key:
        description: 'SonarQube Project Key'
        required: true
        type: string
      aws-domain:
        description: 'AWS CodeArtifact Domain'
        required: true
        type: string
      aws-domain-owner:
        description: 'AWS CodeArtifact Domain Owner'
        required: true
        type: string
      npm-repository:
        description: 'NPM Repository Name'
        required: true
        type: string
      ecr-repo-name:
        description: 'ECR Repository Name'
        required: true
        type: string

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Dependencies
        run: |
          npm install
          npm install --save-dev @babel/plugin-transform-private-property-in-object @babel/plugin-transform-optional-chaining @babel/plugin-transform-nullish-coalescing-operator @babel/plugin-transform-class-properties
          npm install --save-dev @testing-library/react @testing-library/jest-dom
          npm audit fix || true

      - name: Run Unit Tests with Jest
        run: npm test -- --watchAll=false --coverage --forceExit

  build-test-sonar:
    name: SonarQube Scan
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=${{ inputs.sonar-project-key }}
            -Dsonar.sources=./
            -Dsonar.test.inclusions="**/*.test.js"
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info

  build-publish-deploy:
    name: Build, Publish, and Deploy Artifact
    runs-on: ubuntu-latest
    needs: build-test-sonar

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Check for Changes
        id: changes
        run: |
          git fetch origin development
          if git diff --exit-code HEAD origin/development -- . > /dev/null; then
            echo "should_deploy=true" >> $GITHUB_ENV
          else
            echo "should_deploy=false" >> $GITHUB_ENV
          fi

      - name: Increment Version (if needed)
        if: env.should_deploy == 'true'
        run: |
          npm version patch
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git push origin HEAD

      - name: Build React App
        if: env.should_deploy == 'true'
        run: npm run build

      - name: Configure AWS Credentials
        if: env.should_deploy == 'true'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.aws-region }}

      - name: Login to AWS CodeArtifact
        if: env.should_deploy == 'true'
        run: |
          aws codeartifact login \
            --tool npm \
            --repository ${{ inputs.npm-repository }} \
            --domain ${{ inputs.aws-domain }} \
            --domain-owner ${{ inputs.aws-domain-owner }}

      - name: Publish Package
        if: env.should_deploy == 'true'
        run: npm publish

      - name: Upload Package Artifact to GitHub
        if: env.should_deploy == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: react-package
          path: ./build/
