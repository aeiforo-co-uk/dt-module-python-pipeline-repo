name: React Reusable CI/CD Pipeline

on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      SONAR_TOKEN:
        required: true
      MY_GITHUB_TOKEN:
        required: true
    inputs:
      aws-region:
        description: 'AWS Region'
        required: true
        type: string
      sonar-project-key:
        description: 'SonarQube Project Key'
        required: true
        type: string
      aws-domain:
        description: 'AWS CodeArtifact Domain'
        required: true
        type: string
      aws-domain-owner:
        description: 'AWS CodeArtifact Domain Owner'
        required: true
        type: string
      npm-repository:
        description: 'NPM Repository Name'
        required: true
        type: string
      ecr-repo-name:
        description: 'ECR Repository Name'
        required: true
        type: string

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Dependencies
        run: |
          npm install
          npm install --save-dev @babel/plugin-transform-private-property-in-object @babel/plugin-transform-optional-chaining @babel/plugin-transform-nullish-coalescing-operator @babel/plugin-transform-class-properties
          npm install --save-dev @testing-library/react @testing-library/jest-dom
          npm audit fix || true

      - name: Run Unit Tests with Jest
        run: npm test -- --watchAll=false --coverage --forceExit

  build-artifact:
    name: Build, Publish, and Retrieve React App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install

      - name: Build React App
        run: npm run build

      - name: Increment Version and Create package.json
        id: versioning
        run: |
          # Extract the current version if exists, else default to 1.0.0
          VERSION=$(jq -r '.version' build/package.json 2>/dev/null || echo "1.0.0")
          
          # Increment the patch version (e.g., 1.0.0 -> 1.0.1)
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
          PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          
          # Create or update package.json with the new version
          echo "{
            \"name\": \"react-app-build\",
            \"version\": \"$NEW_VERSION\",
            \"description\": \"React App Build Artifact\",
            \"main\": \"index.js\",
            \"license\": \"MIT\"
          }" > build/package.json
          
          echo "New version: $NEW_VERSION"
          echo "VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.aws-region }}

      - name: Login to AWS CodeArtifact
        run: |
          aws codeartifact login \
            --tool npm \
            --repository ${{ inputs.npm-repository }} \
            --domain ${{ inputs.aws-domain }} \
            --domain-owner ${{ inputs.aws-domain-owner }}

      - name: Debug .npmrc
        run: cat ~/.npmrc

      - name: Publish Build to AWS CodeArtifact
        working-directory: ./build
        env:
          NPM_REGISTRY_URL: "https://${{ inputs.aws-domain }}-${{ inputs.aws-domain-owner }}.d.codeartifact.${{ inputs.aws-region }}.amazonaws.com/npm/${{ inputs.npm-repository }}/"
        run: |
          npm set registry $NPM_REGISTRY_URL
          npm publish

      - name: Download and Extract Latest Version
        env:
          NPM_REGISTRY_URL: "https://${{ inputs.aws-domain }}-${{ inputs.aws-domain-owner }}.d.codeartifact.${{ inputs.aws-region }}.amazonaws.com/npm/${{ inputs.npm-repository }}/"
        run: |
          # Configure npm registry
          npm set registry $NPM_REGISTRY_URL
          
          # Authenticate with CodeArtifact
          aws codeartifact login \
            --tool npm \
            --repository ${{ inputs.npm-repository }} \
            --domain ${{ inputs.aws-domain }} \
            --domain-owner ${{ inputs.aws-domain-owner }}
          
          # Download the latest version of the package
          npm pack react-app-build@latest
          
          # Extract the package
          mkdir -p extracted-package
          tar -xzf react-app-build-*.tgz -C extracted-package --strip-components=1
          
          # List extracted files for debugging
          ls -R extracted-package/

      - name: Upload Build Artifact to GitHub
        uses: actions/upload-artifact@v3
        with:
          name: react-app-build
          path: build/
