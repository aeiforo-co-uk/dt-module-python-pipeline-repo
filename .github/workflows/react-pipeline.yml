name: React CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Step 1: Checkout, Unit Testing, and SonarQube Analysis
  build-test-sonar:
    name: Build, Test, and SonarQube
    runs-on: ubuntu-latest

    steps:
      # Step 1.1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 1.2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Step 1.3: Install dependencies
      - name: Install Dependencies
        run: npm install

      # Step 1.4: Run unit tests
      - name: Run Unit Tests
        run: npm test -- --watchAll=false

      # Step 1.5: Run SonarQube Analysis
      - name: SonarQube Scan
        uses: sonarsource/sonarcloud-github-action@v1.10
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=<your-project-key>
            -Dsonar.organization=<your-organization>
            -Dsonar.sources=src
            -Dsonar.tests=src
            -Dsonar.test.inclusions="**/*.test.js"
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info

      # Step 1.6: Check SonarQube Quality Gate
      - name: SonarQube Quality Gate
        uses: sonarsource/sonarcloud-quality-gate-action@v1

  # Step 2: Build React App and Save Artifact
  artifact:
    name: Build React App and Save Artifact
    runs-on: ubuntu-latest
    needs: build-test-sonar

    steps:
      # Step 2.1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2.2: Install dependencies
      - name: Install Dependencies
        run: npm install

      # Step 2.3: Build React app
      - name: Build React App
        run: npm run build

      # Step 2.4: Save build artifact
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: react-app-build
          path: build/

  # Step 3: Dockerize and Deploy
  docker:
    name: Docker Build and Deploy
    runs-on: ubuntu-latest
    needs: artifact

    steps:
      # Step 3.1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 3.2: Download build artifact
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: react-app-build

      # Step 3.3: Build Docker image
      - name: Build Docker Image
        run: |
          docker build -t react-app:latest .

      # Step 3.4: Run Docker container
      - name: Run Docker Container
        run: |
          docker run -d -p 3000:3000 --name react-app react-app:latest
