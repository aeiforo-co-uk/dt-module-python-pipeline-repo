name: Python CI/CD Pipeline Template

on:
  workflow_call:  # Makes the workflow reusable
    inputs:
      repo_name:
        required: true
        type: string
      deploy_env:
        required: true
        type: string
      build_artifacts:
        required: true
        type: boolean
      python_version:
        required: true
        type: string

# Environment Variables
env:
  REPO_NAME: ${{ inputs.repo_name }}
  DEPLOY_ENV: ${{ inputs.deploy_env }}
  BUILD_ARTIFACTS: ${{ inputs.build_artifacts }}
  PYTHON_VERSION: ${{ inputs.python_version }}
  VERSION: ${{ github.sha }}  # Use Git commit SHA for versioning

jobs:
  source_checkout:
    name: Source Checkout
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

  run_tests:
    name: Run Tests with Pytest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests with Pytest
        run: pytest --maxfail=1 --disable-warnings -q

      - name: Generate Test Report
        run: pytest --junitxml=junit/test-results.xml

      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        with:
          name: pytest-results-${{ env.VERSION }}
          path: junit/test-results.xml

  sonarqube_analysis:
    name: SonarQube Code Quality Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install SonarQube Scanner
        run: |
          curl -sSL https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip -o sonar-scanner.zip
          unzip sonar-scanner.zip -d $HOME
          echo "export PATH=$HOME/sonar-scanner-4.8.0.2856-linux/bin:\$PATH" >> $GITHUB_ENV

      - name: Run SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          sonar-scanner \
          -Dsonar.projectKey=${{ env.REPO_NAME }} \
          -Dsonar.sources=. \
          -Dsonar.host.url=$SONAR_HOST_URL \
          -Dsonar.login=$SONAR_TOKEN
